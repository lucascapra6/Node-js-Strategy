##---- CRIA UMA IMAGEM DO POSTGRES
docker run \
--name postgres \
-e POSTGRES_USER=lucascapra6 \
-e POSTGRES_PASSWORD=password \
-e POSTGRES_DB=heroes \
-p 5432:5432 \
-d \
postgres

#---- ENTRA NO CONTAINER
docker exec -it postgres /bin/bash

#----CRIA UM CLIENTE PARA O POSTGRES
docker run \
--name adminer \
-p 8080:8080 \
--link /postgres:latest \
-d \
adminer

----INSTALACAO ORM
npm install sequelize
npm install pg-hstore pg

--------------------------------------------------------------------------------------------------------

##----CRIA UMA IMAGEM DO MONGODB
docker run \
--name mongodb \
-p 27017:27017 \
-e MONGO_INITDB_ROOT_USERNAME=admin \
-e MONGO_INITDB_ROOT_PASSWORD=password \
-d \
mongo:4


#----CRIA UM CLIENTE PARA O MONGO
docker run \
--name mongoclient \
-p 3000:3000 \
--link /mongodb:mongodb \
-d \
mongoclient/mongoclient

----CRIAR NOVO USUARIO MONGO:
docker exec -it mongodb \
mongo --host localhost -u admin -p password --authenticationDatabase admin \
--eval "db.getSiblingDB('herois').createUser({user:'lucas', pwd:'mysecretpassword', roles:[{role: 'readWrite', db:'herois'}]})"

----CONECTAR AO MONGO
docker exec -it 6f14a041d378 \
mongo -u lucas -p mysecretpassword --authenticationDatabase herois

----INSTALAÇÃO ODM
npm install mongoose
